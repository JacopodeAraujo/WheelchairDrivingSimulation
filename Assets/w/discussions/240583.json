[
  {
    "Id": "544368",
    "ThreadId": "240583",
    "Html": "\r\n<p>I have a small wpf/xaml/c# app made of a on screen numberpad with arrows.</p>\r\n<p>I need to simulate holding the key down for the arrows and can only get it to happen once per press.</p>\r\n<p>It is hosted on touch screen windows xp machines.</p>\r\n<p>Currently I am trying to add handlers for left mouse down and up, and use isKeyDown/SimulateKeyDown and vice versa.</p>\r\n<p>Attached is a code example for the right arrow...</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">// in OnActivated</span>\r\nbtnRight.AddHandler(Control.MouseLeftButtonDownEvent, <span style=\"color:blue\">new</span> MouseButtonEventHandler(btnRight_Down), <span style=\"color:blue\">true</span>);\r\n\r\nbtnRight.AddHandler(Control.MouseLeftButtonUpEvent, <span style=\"color:blue\">new</span> MouseButtonEventHandler(btnRight_Up), <span style=\"color:blue\">true</span>);\t\t\r\n\r\n<span style=\"color:green\">// in event handles section</span>\r\n<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> btnRight_Down(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e) {\r\n    <span style=\"color:blue\">if</span> (!InputSimulator.IsKeyDown(VirtualKeyCode.RIGHT)) InputSimulator.SimulateKeyDown(VirtualKeyCode.RIGHT);\r\n}\r\n<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> btnRight_Up(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e) {\r\n    <span style=\"color:blue\">if</span> (InputSimulator.IsKeyDown(VirtualKeyCode.RIGHT)) InputSimulator.SimulateKeyUp(VirtualKeyCode.RIGHT);\r\n}\r\n</pre>\r\n<pre>You push/hold the left mouse btn on the right arrow of the osk app and it just moves once. We need it to keep moving until the left mouse (or touch screen users finger) is lifted.</pre>\r\n<pre>Is this desired functionality what the SimulateKeyDown/Up methods are for? </pre>\r\n</div>\r\n",
    "PostedDate": "2011-01-05T08:00:15.657-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "554108",
    "ThreadId": "240583",
    "Html": "\r\n<div>Hi,</div>\r\n<div></div>\r\n<div>I'm sorry for the delay. What you'll need to do is implement your own timer/keyboard-repeat functionality in the application itself. If you look at the implementation of the WPF On Screen Keyboard (related to the InputSimulator project) it has a key repeat\r\n built in (from memory).</div>\r\n<div></div>\r\n<div>Kind Regards,</div>\r\n<div>Mike<br>\r\n<br>\r\n</div>\r\n<div>On Thu, Jan 6, 2011 at 2:00 AM, zcatton <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"border-left:#ccc 1px solid; margin:0px 0px 0px 0.8ex; padding-left:1ex\">\r\n<div>\r\n<p>From: zcatton</p>\r\n<div>\r\n<p>I have a small wpf/xaml/c# app made of a on screen numberpad with arrows.</p>\r\n<p>I need to simulate holding the key down for the arrows and can only get it to happen once per press.</p>\r\n<p>It is hosted on touch screen windows xp machines.</p>\r\n<p>Currently I am trying to add handlers for left mouse down and up, and use isKeyDown/SimulateKeyDown and vice versa.</p>\r\n<p>Attached is a code example for the right arrow...</p>\r\n<div style=\"background-color:white; color:black\">\r\n<pre><span style=\"color:green\">// in OnActivated</span>\r\nbtnRight.AddHandler(Control.MouseLeftButtonDownEvent, <span style=\"color:blue\">new</span> MouseButtonEventHandler(btnRight_Down), <span style=\"color:blue\">true</span>);\r\n\r\nbtnRight.AddHandler(Control.MouseLeftButtonUpEvent, <span style=\"color:blue\">new</span> MouseButtonEventHandler(btnRight_Up), <span style=\"color:blue\">true</span>);\t\t\r\n\r\n<span style=\"color:green\">// in event handles section</span>\r\n<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> btnRight_Down(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e) {\r\n    <span style=\"color:blue\">if</span> (!InputSimulator.IsKeyDown(VirtualKeyCode.RIGHT)) InputSimulator.SimulateKeyDown(VirtualKeyCode.RIGHT);\r\n}\r\n<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> btnRight_Up(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e) {\r\n    <span style=\"color:blue\">if</span> (InputSimulator.IsKeyDown(VirtualKeyCode.RIGHT)) InputSimulator.SimulateKeyUp(VirtualKeyCode.RIGHT);\r\n}\r\n</pre>\r\n<pre>You push/hold the left mouse btn on the right arrow of the osk app and it just moves once. We need it to keep moving until the left mouse (or touch screen users finger) is lifted.</pre>\r\n<pre>Is this desired functionality what the SimulateKeyDown/Up methods are for? </pre>\r\n</div>\r\n</div>\r\n<div>\r\n<p>Read the <a href=\"http://inputsimulator.codeplex.com/Thread/View.aspx?ThreadId=240583&ANCHOR#Post544368\" target=\"_blank\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:inputsimulator@discussions.codeplex.com?subject=[inputsimulator:240583]\" target=\"_blank\">inputsimulator@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:inputsimulator@discussions.codeplex.com\" target=\"_blank\">\r\ninputsimulator@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://inputsimulator.codeplex.com/subscriptions/thread/project/edit\" target=\"_blank\">\r\nunsubscribe or change your settings</a> on codePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at\r\n<a href=\"http://codeplex.com/\" target=\"_blank\">codeplex.com</a></p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n",
    "PostedDate": "2011-01-23T17:32:29.313-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]