[
  {
    "Id": "650316",
    "ThreadId": "267233",
    "Html": "\r\n<p>I'm working on a macro recorder/player, and during playback I want to block physical user key presses until the macro's simulated input is complete.</p>\r\n<p>My keyboard handler is hooked in to catch all keystrokes, and allows me to watch for, and start simulating key presses at the right time:</p>\r\n<p style=\"padding-left:30px\">static extern IntPtr SetWindowsHookEx(int idHook, keyboardHookProc callback, IntPtr hInstance, uint threadId);</p>\r\n<p>I can block key strokes, but but since the simulated key presses go through the same handler (ie: &quot;indistinguishable&quot;), I won't know if the user pressed a physical key, or if the key was a simulated key press.</p>\r\n<p>Any ideas?</p>\r\n<p>Thanks for the great library!</p>\r\n<p>-AAron</p>\r\n",
    "PostedDate": "2011-07-31T17:56:19.15-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "654215",
    "ThreadId": "267233",
    "Html": "Hi Aaron,\r\n<div><br>\r\n</div>\r\n<div>I'm not aware that you can detect whether the keypress was from the API call (simulated) or the physical keyboard (physical).</div>\r\n<div><br>\r\n</div>\r\n<div>My recollection is that when you make a single call to the SendInput API that entire series of simulated inputs is not-interruptible (ie; the full set of simulated input is completed as one chunk of input).</div>\r\n<div><br>\r\n</div>\r\n<div>From the testing I did at the time I could interleave physical input with simulated input if I made lots of calls to SendInput, but I couldn't interrupt a &quot;chunk&quot; of input sent in one call.</div>\r\n<div><br>\r\n</div>\r\n<div>Refer to the following where the documentation states: <span style=\"font-family:'Segoe UI',Verdana,Arial; font-size:13px\">\r\nThe <strong>SendInput</strong> function inserts the events in the <a href=\"http://msdn.microsoft.com/en-us/library/ms646270(v=vs.85).aspx\" style=\"color:rgb(19,100,196); text-decoration:none\">\r\n<strong>INPUT</strong></a> structures serially into the keyboard or mouse input stream. These events are not interspersed with other keyboard or mouse input events inserted either by the user (with the keyboard or mouse) or by calls to<a href=\"http://msdn.microsoft.com/en-us/library/ms646304(v=vs.85).aspx\" style=\"color:rgb(19,100,196); text-decoration:none\"><strong>keybd_event</strong></a>,\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ms646260(v=vs.85).aspx\" style=\"color:rgb(19,100,196); text-decoration:none\">\r\n<strong>mouse_event</strong></a>, or other calls to <strong>SendInput</strong>.</span></div>\r\n<div><a href=\"http://msdn.microsoft.com/en-us/library/ms646310(v=vs.85).aspx\">http://msdn.microsoft.com/en-us/library/ms646310(v=vs.85).aspx</a></div>\r\n<div><br>\r\n</div>\r\n<div>Hope that helps!</div>\r\n<div>Mike<br>\r\n<br>\r\n<div>On Mon, Aug 1, 2011 at 10:56 AM, aaronnaas <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<p>From: aaronnaas</p>\r\n<div>\r\n<p>I'm working on a macro recorder/player, and during playback I want to block physical user key presses until the macro's simulated input is complete.</p>\r\n<p>My keyboard handler is hooked in to catch all keystrokes, and allows me to watch for, and start simulating key presses at the right time:</p>\r\n<p style=\"padding-left:30px\">static extern IntPtr SetWindowsHookEx(int idHook, keyboardHookProc callback, IntPtr hInstance, uint threadId);</p>\r\n<p>I can block key strokes, but but since the simulated key presses go through the same handler (ie: &quot;indistinguishable&quot;), I won't know if the user pressed a physical key, or if the key was a simulated key press.</p>\r\n<p>Any ideas?</p>\r\n<p>Thanks for the great library!</p>\r\n<p>-AAron</p>\r\n</div>\r\n<div>\r\n<p>Read the <a href=\"http://inputsimulator.codeplex.com/discussions/267233#post650316\" target=\"_blank\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:inputsimulator@discussions.codeplex.com?subject=[inputsimulator:267233]\" target=\"_blank\">inputsimulator@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:inputsimulator@discussions.codeplex.com\" target=\"_blank\">\r\ninputsimulator@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://inputsimulator.codeplex.com/subscriptions/thread/project/edit\" target=\"_blank\">\r\nunsubscribe or change your settings</a> on codePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at\r\n<a href=\"http://codeplex.com\" target=\"_blank\">codeplex.com</a></p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n",
    "PostedDate": "2011-08-07T16:25:04.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "842439",
    "ThreadId": "267233",
    "Html": "<p>It is possible to distinguish fake key presses from real ones using the<br />LLKHF_INJECTED flag: http://msdn.microsoft.com/en-us/library/windows/desktop/ms644967%28v=vs.85%29.aspx</p>\r\n<p>You can do something like</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>flags = (<span style=\"color: blue;\">uint</span>)lParam;\r\n<span style=\"color: blue;\">bool</span> isKeyInjected = (flags &amp; 0x00000010) &gt; 0;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>In practice it might give you \"false\" positives: for example my Logitech<br />keyboard sends media key events with the injected flag turned on for<br />some reason.</p>",
    "PostedDate": "2012-05-30T01:53:04.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]